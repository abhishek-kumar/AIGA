//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace MSR.LST.ConferenceXP.VenueService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VenueServiceSoap", Namespace="http://research.microsoft.com/lst")]
    public partial class VenueService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckAssemblyVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVenuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddParticipantOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateParticipantOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParticipantOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrivacyPolicyUrlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VenueService() {
            this.Url = global::MSR.LST.ConferenceXP.Properties.Settings.Default.Conference_VenueService_VenueService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckAssemblyVersionCompletedEventHandler CheckAssemblyVersionCompleted;
        
        /// <remarks/>
        public event GetVenueCompletedEventHandler GetVenueCompleted;
        
        /// <remarks/>
        public event GetVenuesCompletedEventHandler GetVenuesCompleted;
        
        /// <remarks/>
        public event AddParticipantCompletedEventHandler AddParticipantCompleted;
        
        /// <remarks/>
        public event UpdateParticipantCompletedEventHandler UpdateParticipantCompleted;
        
        /// <remarks/>
        public event GetParticipantCompletedEventHandler GetParticipantCompleted;
        
        /// <remarks/>
        public event GetParticipantsCompletedEventHandler GetParticipantsCompleted;
        
        /// <remarks/>
        public event PrivacyPolicyUrlCompletedEventHandler PrivacyPolicyUrlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/CheckAssemblyVersion", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckAssemblyVersion(string assemblyVersion, out string errorMessage) {
            object[] results = this.Invoke("CheckAssemblyVersion", new object[] {
                        assemblyVersion});
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckAssemblyVersion(string assemblyVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckAssemblyVersion", new object[] {
                        assemblyVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckAssemblyVersion(System.IAsyncResult asyncResult, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAssemblyVersionAsync(string assemblyVersion) {
            this.CheckAssemblyVersionAsync(assemblyVersion, null);
        }
        
        /// <remarks/>
        public void CheckAssemblyVersionAsync(string assemblyVersion, object userState) {
            if ((this.CheckAssemblyVersionOperationCompleted == null)) {
                this.CheckAssemblyVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAssemblyVersionOperationCompleted);
            }
            this.InvokeAsync("CheckAssemblyVersion", new object[] {
                        assemblyVersion}, this.CheckAssemblyVersionOperationCompleted, userState);
        }
        
        private void OnCheckAssemblyVersionOperationCompleted(object arg) {
            if ((this.CheckAssemblyVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAssemblyVersionCompleted(this, new CheckAssemblyVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/GetVenue", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue GetVenue(string venueIdentifier) {
            object[] results = this.Invoke("GetVenue", new object[] {
                        venueIdentifier});
            return ((Venue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVenue(string venueIdentifier, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVenue", new object[] {
                        venueIdentifier}, callback, asyncState);
        }
        
        /// <remarks/>
        public Venue EndGetVenue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Venue)(results[0]));
        }
        
        /// <remarks/>
        public void GetVenueAsync(string venueIdentifier) {
            this.GetVenueAsync(venueIdentifier, null);
        }
        
        /// <remarks/>
        public void GetVenueAsync(string venueIdentifier, object userState) {
            if ((this.GetVenueOperationCompleted == null)) {
                this.GetVenueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenueOperationCompleted);
            }
            this.InvokeAsync("GetVenue", new object[] {
                        venueIdentifier}, this.GetVenueOperationCompleted, userState);
        }
        
        private void OnGetVenueOperationCompleted(object arg) {
            if ((this.GetVenueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenueCompleted(this, new GetVenueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/GetVenues", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Venue[] GetVenues(string participantIdentifier) {
            object[] results = this.Invoke("GetVenues", new object[] {
                        participantIdentifier});
            return ((Venue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetVenues(string participantIdentifier, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetVenues", new object[] {
                        participantIdentifier}, callback, asyncState);
        }
        
        /// <remarks/>
        public Venue[] EndGetVenues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Venue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVenuesAsync(string participantIdentifier) {
            this.GetVenuesAsync(participantIdentifier, null);
        }
        
        /// <remarks/>
        public void GetVenuesAsync(string participantIdentifier, object userState) {
            if ((this.GetVenuesOperationCompleted == null)) {
                this.GetVenuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVenuesOperationCompleted);
            }
            this.InvokeAsync("GetVenues", new object[] {
                        participantIdentifier}, this.GetVenuesOperationCompleted, userState);
        }
        
        private void OnGetVenuesOperationCompleted(object arg) {
            if ((this.GetVenuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVenuesCompleted(this, new GetVenuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/AddParticipant", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddParticipant(Participant p) {
            this.Invoke("AddParticipant", new object[] {
                        p});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddParticipant(Participant p, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddParticipant", new object[] {
                        p}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddParticipant(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddParticipantAsync(Participant p) {
            this.AddParticipantAsync(p, null);
        }
        
        /// <remarks/>
        public void AddParticipantAsync(Participant p, object userState) {
            if ((this.AddParticipantOperationCompleted == null)) {
                this.AddParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddParticipantOperationCompleted);
            }
            this.InvokeAsync("AddParticipant", new object[] {
                        p}, this.AddParticipantOperationCompleted, userState);
        }
        
        private void OnAddParticipantOperationCompleted(object arg) {
            if ((this.AddParticipantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddParticipantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/UpdateParticipant", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateParticipant(Participant p) {
            this.Invoke("UpdateParticipant", new object[] {
                        p});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateParticipant(Participant p, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateParticipant", new object[] {
                        p}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateParticipant(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateParticipantAsync(Participant p) {
            this.UpdateParticipantAsync(p, null);
        }
        
        /// <remarks/>
        public void UpdateParticipantAsync(Participant p, object userState) {
            if ((this.UpdateParticipantOperationCompleted == null)) {
                this.UpdateParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateParticipantOperationCompleted);
            }
            this.InvokeAsync("UpdateParticipant", new object[] {
                        p}, this.UpdateParticipantOperationCompleted, userState);
        }
        
        private void OnUpdateParticipantOperationCompleted(object arg) {
            if ((this.UpdateParticipantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateParticipantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/GetParticipant", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Participant GetParticipant(string participantIdentifier) {
            object[] results = this.Invoke("GetParticipant", new object[] {
                        participantIdentifier});
            return ((Participant)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParticipant(string participantIdentifier, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParticipant", new object[] {
                        participantIdentifier}, callback, asyncState);
        }
        
        /// <remarks/>
        public Participant EndGetParticipant(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Participant)(results[0]));
        }
        
        /// <remarks/>
        public void GetParticipantAsync(string participantIdentifier) {
            this.GetParticipantAsync(participantIdentifier, null);
        }
        
        /// <remarks/>
        public void GetParticipantAsync(string participantIdentifier, object userState) {
            if ((this.GetParticipantOperationCompleted == null)) {
                this.GetParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParticipantOperationCompleted);
            }
            this.InvokeAsync("GetParticipant", new object[] {
                        participantIdentifier}, this.GetParticipantOperationCompleted, userState);
        }
        
        private void OnGetParticipantOperationCompleted(object arg) {
            if ((this.GetParticipantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParticipantCompleted(this, new GetParticipantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/GetParticipants", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Participant[] GetParticipants() {
            object[] results = this.Invoke("GetParticipants", new object[0]);
            return ((Participant[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParticipants(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParticipants", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Participant[] EndGetParticipants(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Participant[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParticipantsAsync() {
            this.GetParticipantsAsync(null);
        }
        
        /// <remarks/>
        public void GetParticipantsAsync(object userState) {
            if ((this.GetParticipantsOperationCompleted == null)) {
                this.GetParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParticipantsOperationCompleted);
            }
            this.InvokeAsync("GetParticipants", new object[0], this.GetParticipantsOperationCompleted, userState);
        }
        
        private void OnGetParticipantsOperationCompleted(object arg) {
            if ((this.GetParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParticipantsCompleted(this, new GetParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://research.microsoft.com/lst/PrivacyPolicyUrl", RequestNamespace="http://research.microsoft.com/lst", ResponseNamespace="http://research.microsoft.com/lst", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PrivacyPolicyUrl() {
            object[] results = this.Invoke("PrivacyPolicyUrl", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPrivacyPolicyUrl(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrivacyPolicyUrl", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPrivacyPolicyUrl(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrivacyPolicyUrlAsync() {
            this.PrivacyPolicyUrlAsync(null);
        }
        
        /// <remarks/>
        public void PrivacyPolicyUrlAsync(object userState) {
            if ((this.PrivacyPolicyUrlOperationCompleted == null)) {
                this.PrivacyPolicyUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrivacyPolicyUrlOperationCompleted);
            }
            this.InvokeAsync("PrivacyPolicyUrl", new object[0], this.PrivacyPolicyUrlOperationCompleted, userState);
        }
        
        private void OnPrivacyPolicyUrlOperationCompleted(object arg) {
            if ((this.PrivacyPolicyUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrivacyPolicyUrlCompleted(this, new PrivacyPolicyUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://research.microsoft.com/lst")]
    public partial class Venue {
        
        private string identifierField;
        
        private string iPAddressField;
        
        private int portField;
        
        private string nameField;
        
        private byte[] iconField;
        
        private SecurityPatterns accessListField;
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public int Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public SecurityPatterns AccessList {
            get {
                return this.accessListField;
            }
            set {
                this.accessListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://research.microsoft.com/lst")]
    public partial class SecurityPatterns {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://research.microsoft.com/lst")]
    public partial class Participant {
        
        private string identifierField;
        
        private string nameField;
        
        private string emailField;
        
        private byte[] iconField;
        
        private System.DateTime lastAccessedField;
        
        /// <remarks/>
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAccessed {
            get {
                return this.lastAccessedField;
            }
            set {
                this.lastAccessedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CheckAssemblyVersionCompletedEventHandler(object sender, CheckAssemblyVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAssemblyVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAssemblyVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVenueCompletedEventHandler(object sender, GetVenueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVenuesCompletedEventHandler(object sender, GetVenuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVenuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVenuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Venue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Venue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void AddParticipantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void UpdateParticipantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetParticipantCompletedEventHandler(object sender, GetParticipantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParticipantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParticipantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Participant Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Participant)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetParticipantsCompletedEventHandler(object sender, GetParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Participant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Participant[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void PrivacyPolicyUrlCompletedEventHandler(object sender, PrivacyPolicyUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrivacyPolicyUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrivacyPolicyUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591